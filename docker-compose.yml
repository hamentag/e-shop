version: "3.8"

services:
  postgres:
    image: postgres:17
    container_name: eshop-postgres
    env_file:
      - ./server/.env
    environment:
      POSTGRES_USER: hamuser
      POSTGRES_PASSWORD: hamuser
      POSTGRES_DB: eshop_db
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - eshop-net
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "hamuser", "-d", "eshop_db"]
      interval: 5s
      timeout: 3s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile.express
    image: eshop-express
    container_name: eshop-express-container
    env_file:
      - ./server/.env
    environment:
      NODE_ENV: production 
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "3001:3000"
    networks:
      - eshop-net

  chat-backend:
    build:
      context: .
      dockerfile: Dockerfile.flask
    image: eshop-chat
    container_name: eshop-chat-container
    env_file:
      - ./chat-backend/.env
    ports:
      - "5001:5000"
    networks:
      - eshop-net

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.react
    image: eshop-react
    container_name: eshop-react-container
    depends_on:
      - backend
      - chat-backend
    ports:
      - "8082:80"
    networks:
      - eshop-net

volumes:
  pgdata:

networks:
  eshop-net:
    driver: bridge
